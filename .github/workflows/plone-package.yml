# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Plone package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: 3.9
            plone-version: 52
          - python-version: 2.7
            plone-version: 52
          - python-version: 2.7
            plone-version: 51
          - python-version: 2.7
            plone-version: 43
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/buildout-cache
            ~/extends
          key: ${{ runner.os }}-${{ matrix.python-version }}-buildout-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/tox.ini') }}
          restore-keys: |
            ${{ runner.os }}-buildout-
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system libraries
        run: sudo apt-get install libxslt1-dev
      - name: setup buildout cache
        run: |
          mkdir -p ~/buildout-cache/{eggs,downloads}
          mkdir ~/.buildout
          echo "[buildout]" > $HOME/.buildout/default.cfg
          echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg
          echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg
      - name: Install dependencies
        run: python -m pip install --upgrade pip && pip install zc.buildout wheel -c constraints_plone${{ matrix.plone-version }}.txt
      - name: Install pip-pyopenssl to solve problem with Plone 4.3
        # See https://github.com/pypa/pypi-support/issues/974#issuecomment-882640074
        run: |
          wget http://pylegacy.org/hub/get-pip-pyopenssl.py
          python get-pip-pyopenssl.py
        if: matrix.plone-version == '43'
      - name: Run buildout
        run: buildout -c test_plone${{ matrix.plone-version }}.cfg install test coverage
      - name: Run tests
        run: bin/coverage run bin/test --xml --all
      - name: Publish test report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Tests
          path: parts/**/output.xml
          reporter: jest-junit

  pre-commit:
    name: Check pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.3
